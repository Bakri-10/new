name: 'Create MS SQL Database'
run-name: ${{github.actor}}
on:
    workflow_call:
      inputs:
        server_id:
          type: string
          required: true
        location:
          type: string
          required: true
        environment:
          type: string
          required: true
        purpose:
          type: string
          required: true
        db_purpose:
          type: string
          required: true
        collation:
          type: string
          required: false
          default: "SQL_Latin1_General_CP1_CI_AS"
        skuname:
          type: string
          required: true
        zoneredundancy:
          type: string
          required: false
          default: "false"
        destroy:
          type: boolean
          required: false
          default: false
        subscription:
          type: string
          required: true
      secrets:
        ARM_CLIENT_ID:
          required: true
        ARM_CLIENT_SECRET:
          required: true
        ARM_SUBSCRIPTION_ID:
          required: true
        ARM_TENANT_ID:
          required: true

jobs:
  mssql-database-deployment:
    name: 'Deploying - MSSQL Database'
    runs-on: ubuntu-latest
    environment: ${{inputs.environment}}
    env:
        ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
        ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
        ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}
        ARM_SUBSCRIPTION_ID: ${{secrets.ARM_SUBSCRIPTION_ID}}
        ROOT_PATH: 'Azure/mssql/database'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Terraform Init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: latest
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: ${{env.ROOT_PATH}}

      - name: Terraform Plan
        if: inputs.destroy != true
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: latest
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: ${{env.ROOT_PATH}}
        env:
          TF_VAR_server_id: ${{inputs.server_id}}
          TF_VAR_location: ${{inputs.location}}
          TF_VAR_environment: ${{inputs.environment}}
          TF_VAR_purpose: ${{inputs.purpose}}
          TF_VAR_db_purpose: ${{inputs.db_purpose}}
          TF_VAR_collation: ${{inputs.collation}}
          TF_VAR_skuname: ${{inputs.skuname}}
          TF_VAR_zoneredundancy: ${{inputs.zoneredundancy}}

      - name: Terraform Plan Destroy
        if: inputs.destroy == true
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: latest
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: ${{env.ROOT_PATH}}
          args: '-destroy'
        env:
          TF_VAR_server_id: ${{inputs.server_id}}
          TF_VAR_location: ${{inputs.location}}
          TF_VAR_environment: ${{inputs.environment}}
          TF_VAR_purpose: ${{inputs.purpose}}
          TF_VAR_db_purpose: ${{inputs.db_purpose}}
          TF_VAR_collation: ${{inputs.collation}}
          TF_VAR_skuname: ${{inputs.skuname}}
          TF_VAR_zoneredundancy: ${{inputs.zoneredundancy}}

      - name: Terraform Apply
        if: inputs.destroy != true
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: latest
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: ${{env.ROOT_PATH}}
        env:
          TF_VAR_server_id: ${{inputs.server_id}}
          TF_VAR_location: ${{inputs.location}}
          TF_VAR_environment: ${{inputs.environment}}
          TF_VAR_purpose: ${{inputs.purpose}}
          TF_VAR_db_purpose: ${{inputs.db_purpose}}
          TF_VAR_collation: ${{inputs.collation}}
          TF_VAR_skuname: ${{inputs.skuname}}
          TF_VAR_zoneredundancy: ${{inputs.zoneredundancy}}

      - name: Terraform Destroy
        if: inputs.destroy == true
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: latest
          tf_actions_subcommand: 'destroy'
          tf_actions_working_dir: ${{env.ROOT_PATH}}
        env:
          TF_VAR_server_id: ${{inputs.server_id}}
          TF_VAR_location: ${{inputs.location}}
          TF_VAR_environment: ${{inputs.environment}}
          TF_VAR_purpose: ${{inputs.purpose}}
          TF_VAR_db_purpose: ${{inputs.db_purpose}}
          TF_VAR_collation: ${{inputs.collation}}
          TF_VAR_skuname: ${{inputs.skuname}}
          TF_VAR_zoneredundancy: ${{inputs.zoneredundancy}} 
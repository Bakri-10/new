name: 'Deploy SQL Failover Group'
run-name: '${{ github.actor }} - Deploying to_${{ inputs.subscription }}_${{ inputs.environment }}'

on:
  workflow_dispatch:
    inputs:
      requesttype:
        type: choice
        required: true
        description: Request Type
        options:
          - Create
          - Remove
        default: "Create"
      primary_server_id:
        type: string
        required: true
        description: Primary SQL Server Resource ID
      secondary_server_id:
        type: string
        required: true
        description: Secondary SQL Server Resource ID
      database_ids:
        type: string
        required: true
        description: Database IDs (comma-separated list)
      subscription:
        type: string
        required: true
        description: Please enter your subscription Name
      location:
        type: choice
        description: Pick the Location
        options:
          - eastus2
          - centralus
      secondary_location:
        type: choice
        description: Pick the Location for secondary
        options:
          - eastus2
          - centralus
        default: centralus
      environment:
        type: choice
        description: Choose the environment
        options:
          - dev
          - qa
          - UAT
          - Prod
      purpose:
        type: string
        description: Failover Group purpose
        required: true

jobs:
  sql-failover_create:
    if: github.event.inputs.requesttype == 'Create'
    name: 'Deploying - MSSQL Failover Group'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

  sql-failover_remove:
    if: github.event.inputs.requesttype == 'Remove'
    name: 'Removing - MSSQL Failover Group'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
